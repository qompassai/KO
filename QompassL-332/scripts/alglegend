#!/bin/bash
# Custom OpenSSL Build Script for X86_64 with OQS Support
# Environment settings and build script for including post-quantum cryptography (PQC) algorithms
# Organized by algorithm use cases (e.g., key exchange, digital signatures, etc.)

# Set Environment Variables for Clang/LLVM Compiler
export CC=clang
export CXX=clang++
export CFLAGS="$CFLAGS -DENGINE_AFALG"
export LDFLAGS="-fuse-ld=lld"
export PKG_CONFIG_PATH="/opt/qompassl/lib/pkgconfig:/opt/liboqs/lib/pkgconfig:$PKG_CONFIG_PATH"
export OPENSSL_MODULES="/opt/qompassl/lib/ossl-modules"

# Set liboqs installation directory
LIBOQS_INSTALL_DIR="/opt/liboqs"

# Ensure the script is run from the correct directory
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
cd "$SCRIPT_DIR/.."

# Clean any previous build artifacts
BUILD_DIR="$SCRIPT_DIR/../build"
sudo rm -rf "$BUILD_DIR"
mkdir "$BUILD_DIR"
cd "$BUILD_DIR"

../Configure shared \
  --prefix=/opt/qompassl \
  --openssldir=/opt/qompassl/ssl \
  linux-x86_64 \
  enable-engine \
  enable-dynamic-engine \
  no-weak-ssl-ciphers \
  enable-afalgeng \
  no-ssl3 \
  enable-ktls \
  enable-legacy \
  enable-fips \
  enable-tls1_3 \
  enable-async \
  enable-quic \
  enable-asm \
  enable-rdrand \
  -Wl,-rpath=/opt/qompassl/lib \
  -DOPENSSL_NO_HEARTBEATS \
  -DOPENSSL_TLS_SECURITY_LEVEL=2 \
  enable-oqs \
  enable-crypto-mdebug \
  enable-crypto-mdebug-backtrace \
  -Dliboqs_DIR=${LIBOQS_INSTALL_DIR}/lib/cmake/liboqs \
  -I${LIBOQS_INSTALL_DIR}/include \
  enable-ec \
  enable-ecdh \
  enable-dh \
  enable-psk \
  enable-cross_rsdp \
  enable-cross_rsdpg \
  -DOQS_DEFAULT_GROUPS="kyber512:kyber768:kyber1024:bike1l1cpa:bike1l3cpa:bike1l5cpa:frodo640aes:frodo976aes:frodo1344aes:hqc128:hqc192:hqc256:ntru-hps-2048-509:ntru-hps-2048-677:ntru-hps-4096-821:ntru-hrss-701:mceliece348864:mceliece460896:mceliece6688128:mceliece6960119:mceliece8192128" \
  enable-dsa \
  enable-ecdsa \
  enable-gost \
  enable-lms \
  enable-mayo \
  -DOQS_DEFAULT_SIGNATURES="dilithium2:dilithium3:dilithium5:falcon512:falcon1024:sphincssha256128frobust:sphincssha256192frobust:sphincssha256256frobust:xmss_sha256_h10:xmss_sha256_h16:xmss_sha256_h20:xmss_sha512_h10:xmss_sha512_h16:xmss_sha512_h20:xmss_shake128_h10:xmss_shake128_h16:xmss_shake128_h20:xmss_shake256_h10:xmss_shake256_h16:xmss_shake256_h20" \
  enable-chacha \
  enable-camellia \
  enable-seed \
  enable-bf \
  enable-cast \
  enable-aria \
  enable-sm4 \
  enable-blake2 \
  enable-mdc2 \
  enable-whirlpool \
  enable-poly1305 \
  enable-sm3 \
  enable-sm2 \
  enable-siphash \
  enable-ocb \
  enable-ocsp \
  enable-shake128 \
  enable-shake256 \
  enable-gost89 \
  enable-gost94

# Compression and Additional Features
  enable-zlib \
  enable-zlib-dynamic \
  enable-comp \
  enable-srp \
  enable-tfo \
  enable-tls1 \
  enable-tls1_1 \
  enable-tls1_2 \
  enable-tls1_3 \
  enable-sctp \
  enable-cms \
  enable-rfc3779 \
  enable-idea \
  enable-rc5 \
  enable-nextprotoneg

# Build and Install
sudo make -j$(nproc)
sudo make DESTDIR=/opt/qompassl install_sw install_ssldirs install_engines install_fips

# Update shared library cache
sudo ldconfig

# Run Tests
TEST_REPORT_FILE="openssl_test_report_$(date +'%Y%m%d_%H%M%S').txt"
make test | tee "$TEST_REPORT_FILE" || echo "Some tests failed. Test report saved to $TEST_REPORT_FILE"

# Convert test report to PDF (using pandoc, if available)
if command -v pandoc &> /dev/null
then
    pandoc "$TEST_REPORT_FILE" -o "openssl_test_report_$(date +'%Y%m%d_%H%M%S').pdf"
    echo "Test report converted to PDF."
else
    echo "Pandoc not found. Test report saved as text."
fi

# Display message about the completion and environment settings
echo "Installation complete. The shared library cache has been updated."

cat << EOF

To use this version of OpenSSL with OQS support, add the following environment variables to your shell:

export PATH="/opt/qompassl/bin:\$PATH"
export LD_LIBRARY_PATH="/opt/qompassl/lib:\$LD_LIBRARY_PATH"
export PKG_CONFIG_PATH="/opt/qompassl/lib/pkgconfig:\$PKG_CONFIG_PATH"

To temporarily unset these environment variables and prevent them from affecting system tools, you can use:

unset LD_LIBRARY_PATH
unset PATH
unset PKG_CONFIG_PATH

EOF

